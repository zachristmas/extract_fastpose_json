{"version":3,"sources":["PoseNumbers.png","StyledDropzone.js","App.js","reportWebVitals.js","index.js"],"names":["baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","props","onDrop","useCallback","acceptedFiles","forEach","file","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","result","label","keypoint","mapName","keypointSelector","keypointX","keypointY","keypointC","keypointMap","JSON","parse","map","x","frame","image_id","keypoints","filename","arrayOfJson","replacer","key","value","header","Object","keys","csv","row","fieldName","stringify","join","unshift","link","document","createElement","setAttribute","encodeURIComponent","style","visibility","body","appendChild","click","removeChild","downloadCSVFromJson","readAsBinaryString","useDropzone","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","useMemo","className","options","App","useState","selectedOption","setSelectedOption","src","poseImage","alt","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.da97fe1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/PoseNumbers.c18dfdc2.png\";","import React, { useMemo, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '20px',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#fafafa',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out'\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nconst downloadCSVFromJson = (filename, arrayOfJson) => {\n  // convert JSON to CSV\n  const replacer = (key, value) => value === null ? '' : value // specify how you want to handle null values here\n  const header = Object.keys(arrayOfJson[0])\n  let csv = arrayOfJson.map(row => header.map(fieldName =>\n    JSON.stringify(row[fieldName], replacer)).join(','))\n  csv.unshift(header.join(','))\n  csv = csv.join('\\r\\n')\n\n  // Create link and download\n  var link = document.createElement('a');\n  link.setAttribute('href', 'data:text/csv;charset=utf-8,%EF%BB%BF' + encodeURIComponent(csv));\n  link.setAttribute('download', filename);\n  link.style.visibility = 'hidden';\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n\nexport const StyledDropzone = (props) => {\n  const onDrop = useCallback(acceptedFiles => {\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result\n        //console.log(binaryStr)\n        console.log(props.label)\n        console.log(props.keypoint)\n        console.log(props.mapName)\n        const keypointSelector = props.keypoint * 3;\n        const keypointX = keypointSelector;\n        const keypointY = keypointSelector + 1;\n        const keypointC = keypointSelector + 2;\n\n        const keypointMap = JSON.parse(binaryStr).map(x => {\n          return {\n            frame: x.image_id,\n            // person_id: x.category_id,\n            // score: x.score,\n            // keypoints: {\n              [props.mapName + '_x']: x.keypoints[keypointX],\n              [props.mapName + '_y']: x.keypoints[keypointY],\n              [props.mapName + '_c']: x.keypoints[keypointC],\n            // }\n          }\n        })\n        console.log(keypointMap);\n        // const toCSV = keypointMap.map(x => {\n        //   return { \n        //       frame: x.frame, \n        //       right_wrist_x: x.keypoints.right_wrist_x, \n        //       right_wrist_y: x.keypoints.right_wrist_y, \n        //       right_wrist_c: x.keypoints.right_wrist_c }\n        // })\n        downloadCSVFromJson(props.label,keypointMap)\n      }\n      reader.readAsBinaryString(file)\n    })\n  }, [])\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({ onDrop });\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n\n\n  return (\n    <div className=\"container\" {...getRootProps({ style })}>\n      <input {...getInputProps()} />\n      <p>Drag 'n' drop some files here, or click to select files</p>\n    </div>\n  );\n}\n\nexport default StyledDropzone;","import './App.css';\nimport poseImage from './PoseNumbers.png'\nimport Select from 'react-select'\nimport {useState} from 'react';\nimport StyledDropzone from './StyledDropzone';\n\nconst options = [\n  { value: 0, label: '0: head', mapName: 'head' },\n  { value: 1, label: '1: chest', mapName: 'chest' },\n  { value: 2, label: '2: left_shoulder', mapName: 'left_shoulder' },\n  { value: 3, label: '3: left_elbow', mapName: 'left_elbow' },\n  { value: 4, label: '4: left_hand', mapName: 'left_hand' },\n  { value: 5, label: '5: right_shoulder', mapName: 'right_shoulder' },\n  { value: 6, label: '6: right_elbow', mapName: 'right_elbow' },\n  { value: 7, label: '7: right_hand', mapName: 'right_hand' },\n  { value: 8, label: '8: left_hip', mapName: 'left_hip' },\n  { value: 9, label: '9: left_knee', mapName: 'left_knee' },\n  { value: 10, label: '10: left_foot', mapName: 'left_foot' },\n  { value: 11, label: '11: right_hip', mapName: 'right_hip' },\n  { value: 12, label: '12: right_knee', mapName: 'right_knee' },\n  { value: 13, label: '13: right_foot', mapName: 'right_foot' },\n  { value: 14, label: '14: left_eye', mapName: 'left_eye' },\n  { value: 15, label: '15: right_eye', mapName: 'right_eye' },\n  { value: 16, label: '16: left_ear', mapName: 'left_ear' },\n  { value: 17, label: '17: right_ear', mapName: 'right_ear' },\n]\n\nfunction App() {\n  const [selectedOption, setSelectedOption] = useState([]);\n  const handleChange = (options) => {\n    setSelectedOption(options);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>OpenPose JSON-2-CSV Extraction</h2>\n        <h3>1) First start by running the following command in OpenPose</h3>\n        <p><code>bin\\OpenPoseDemo.exe --video examples/media/v8.mp4 --net_resolution 320x320 --write_coco_json output_folder_path/keypoints8.json</code></p>\n        <h3>2) Then, using the diagram below, choose a keypoint that you would like to extract data for: </h3>\n        <img src={poseImage} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <div className=\"App-body\">\n        <br/>\n        <div className=\"select-container\" style={{ color: 'grey' }}>\n          <Select options={options} onChange={handleChange} />\n          <br />\n        </div>\n        <p>Your selected keypoint: <strong>{selectedOption.label}</strong></p>\n        <br />\n        <br />\n        <h3>3) Finally, drop the JSON file below to generate your csv: </h3>\n        <br />\n        <br />\n          {selectedOption.label && <StyledDropzone key={selectedOption.label} keypoint={selectedOption.value} label={selectedOption.label} mapName={selectedOption.mapName}/>}\n        <br />\n        <br />\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}